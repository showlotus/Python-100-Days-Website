import{_ as a,c as i,o as n,ag as l}from"./chunks/framework.CYgIfFH3.js";const p="/Python-100-Days-Website/assets/pandas_data_structures.hN13NZj9.png",e="/Python-100-Days-Website/assets/data_analysis_steps.CMpqX-mg.png",g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"番外篇/如何快速驾驭 pandas 库.md","filePath":"番外篇/如何快速驾驭 pandas 库.md","lastUpdated":1741068543000}'),h={name:"番外篇/如何快速驾驭 pandas 库.md"};function t(k,s,r,E,d,c){return n(),i("div",null,s[0]||(s[0]=[l('<h2 id="如何快速驾驭-pandas-库" tabindex="-1">如何快速驾驭 pandas 库 <a class="header-anchor" href="#如何快速驾驭-pandas-库" aria-label="Permalink to &quot;如何快速驾驭 pandas 库&quot;">​</a></h2><p>最近有小伙伴提到，Python 做数据分析的 pandas 库函数和方法实在太多，感觉学习和使用起来思路都非常混乱。之前回复过这个问题，今天把它更系统的整理一下，毕竟这个库是 Python 数据科学生态圈中扮演着极为重要的角色，虽然目前有很多 pandas 库的替代品（如：polars、cuDF等），但是使用方法跟 pandas 可以说是大同小异。</p><h3 id="三个核心类" tabindex="-1">三个核心类 <a class="header-anchor" href="#三个核心类" aria-label="Permalink to &quot;三个核心类&quot;">​</a></h3><p>Pandas 库有三个最核心的类，其中最重要的是<code>DataFrame</code>类型，它是学习的重点，如下图所示。</p><img src="'+p+'" style="zoom:50%;"><ol><li><code>Series</code>：表示一维数据，跟一维数组类似（带标签的数组），每个数据都有自己的索引（标签），可以通过索引访问数据。</li><li><code>DataFrame</code>：表示二维数据，类似于 Excel 电子表格，行和列都有自己的索引（标签），可以通过索引访问行、列、单元格。</li><li><code>Index</code>：表示索引，为<code>Series</code>和<code>DataFrame</code> 提供索引服务，<code>Index</code>有很多的子类型，适用于需要不同类型的索引的场景。</li></ol><h3 id="数据分析流程" tabindex="-1">数据分析流程 <a class="header-anchor" href="#数据分析流程" aria-label="Permalink to &quot;数据分析流程&quot;">​</a></h3><p>学习和使用 pandas 重点是<code>DataFrame</code>的应用，我们建议大家按照数据分析的流程来掌握对应的函数和方法，这样做往往会事半功倍。数据分析流程如下图所示，其中蓝色虚线圈中的部分就是可以通过 BI 工具（如：Power BI、Tableau等）或 Python 程序来完成的部分。</p><img src="'+e+`" style="zoom:38%;"><h4 id="数据获取" tabindex="-1">数据获取 <a class="header-anchor" href="#数据获取" aria-label="Permalink to &quot;数据获取&quot;">​</a></h4><p>数据获取也可以称为数据加载，其本质就是创建<code>DataFrame</code>对象，需要掌握以下几个函数：</p><ol><li>从 CSV 文件加载数据。</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.read_csv(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    filepath,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CSV文件路径（可以本地绝对路径或相对路径，也可以是一个URL）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sep,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 字段分隔符（默认是逗号）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    header,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 表头在第几行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    encoding,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 文件编码（默认utf-8）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    quotechar,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 包裹字符串的符号（默认是双引号）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    usecols,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 加载哪些列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    index_col,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定索引列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dtype,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定列的数据类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    converters,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定列的数据转换器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nrows,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 加载多少行数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    skiprows,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定需要跳过的行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    parse_dates,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将哪些列解析为日期时间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    date_format,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日期格式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    true_values,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 被视为布尔值True的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    false_values,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 被视为布尔值False的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    na_values,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 被视为空值的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    na_filter,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否检测空值标记</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    on_bad_lines,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 遇到有问题的行如何处理（可选项：&#39;error&#39;、&#39;warn&#39;、&#39;skip&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    engine,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定底层引擎（例如：可以使用更快的Arrow引擎来处理体量更大的数据）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iterator,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否开启迭代器模式（处理大数据时减少内存开销）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chunksize,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 迭代器模式下每次加载数量的体量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ol start="2"><li>从 Excel 文件加载数据。</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.read_excel(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    io,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 工作簿文件的路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sheet_name,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 工作表的名字</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    skip_footer,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 跳过末尾多少行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p><strong>说明</strong>：<code>read_excel</code>函数跟<code>read_csv</code>有很多作用相同的参数，这里就没有赘述了。从 Excel 文件中加载数据时，没有迭代器模式。</p></blockquote><ol start="3"><li>从数据库或数仓加载数据。</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.read_sql(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sql,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># SQL查询或二维表的名字</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    con,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 数据库连接</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    parse_dates,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定需要解析成日期的列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    index_col,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定索隐裂</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 需要加载的列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chunksize,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 加载数据的体量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dtype,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定列的数据类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="4"><li>其他创建<code>DataFrame</code>对象的方式。</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.DataFrame(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">95</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">87</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">66</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">78</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">92</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">89</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1002</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1003</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">columns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Verbal&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Math&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.DataFrame(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Verbal&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">95</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">66</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">92</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Math&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">87</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">78</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">89</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1002</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1003</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如果要对<code>DataFrame</code>中的数据或索引进行操作，需要掌握下面的运算和方法。</p><ol><li>查看信息</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.info()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>查看前/后 N 行</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.head(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.tail(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="3"><li>操作列</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;column_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.colume_name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="4"><li>操作行</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.loc[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;row_index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.iloc[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="5"><li>操作单元格</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.at[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;row_index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;column_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.iat[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="6"><li>删除行或列</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.drop(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    labels,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要删除的行或列的索引</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    axis,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># axis=0，labels表示行索引；axis=1，labels表示列索引</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    index,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要删除的行的索引</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要删除的列的索引</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地删除（inplace=True，表示就地删除不返回新DataFrame对象）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="7"><li>筛选数据</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.query(expr)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过表达式指定筛选条件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df[bool_index]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 布尔索引</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="8"><li>随机抽样</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.sampe(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n,             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 样本容量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    frac,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 抽样比例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    replace,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 有放回或无放回抽样（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    random_state,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 随机数种子（种子相同每次抽样的结果相同）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol start="9"><li>重置索引</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.reset_index(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    level,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对于多级索引指定重置哪一级的索引</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    drop,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否丢弃索引（drop=False表示索引会被处理成普通列）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地处理（要不要返回新的DataFrame对象）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="10"><li>设置索引</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.set_index(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   keys,              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定作为索引的列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   drop,              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否删除作为索引的列（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   append,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否将指定列加入现有的索引（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   inplace,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地处理（要不要返回新的DataFrame对象）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   verify_integrity,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查索引列是否存在重复值（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="11"><li>调整索引顺序</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.reindex()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df[fancy_index]       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 花式索引</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.loc[facy_index]    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 花式索引</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.iloc[fancy_index]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 花式索引</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="12"><li>索引排序</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.sort_index(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    axis,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 确定行索引或列索引（默认值0）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    level,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对于多级索引指定索引的级别</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ascending,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 升序或降序（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地排序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kind,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 排序算法（默认值&#39;quicksort&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    na_position,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 空值放在最前还是最后（默认值&#39;last&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    key,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 传入比较索引大小的函数（自定义比较规则）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="数据重塑" tabindex="-1">数据重塑 <a class="header-anchor" href="#数据重塑" aria-label="Permalink to &quot;数据重塑&quot;">​</a></h4><ol><li>拼接（类似于 SQL 中的 union 操作）</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.concat(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    objs,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 保存多个DataFrame对象的容器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    axis,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 沿着哪个轴进行拼接</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ignore_index,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否忽略原来的索引（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li>合并（类似于 SQL 中的 join 操作）</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.merge(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    left,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 左表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    right,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 右表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    how,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定连表的方式（默认值&#39;inner&#39;表示内连接）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    on,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定连表字段（如果左右两表连表字段同名）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    left_on,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定左表的连表字段</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    right_on,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定右表的连表字段</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    left_index,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否使用左表的索引连表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    right_index,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否使用右表的索引连表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    suffixes,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定同名列的后缀（默认值(&#39;_x&#39;, &#39;_y&#39;)）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="数据清洗" tabindex="-1">数据清洗 <a class="header-anchor" href="#数据清洗" aria-label="Permalink to &quot;数据清洗&quot;">​</a></h4><ol><li>缺失值</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 甄别缺失值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.isna()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.notna()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除缺失值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.dropna(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    axis,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删行或删列（默认值0）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    how,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否存在任意一个缺失值就删除（默认值&#39;any&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subset,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 只对哪些行或列删除空值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地删除（要不要返回新的DataFrame对象）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 填充缺失值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.fillna(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    value,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 填充的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    method,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 填充空值的方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地填充（要不要返回新的DataFrame对象）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用插值算法插值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.interpolate(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    method,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 插值算法（默认值&#39;linear&#39;表示线性插值法） </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    axis,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 沿着哪个轴插值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地插值（要不要返回新的DataFrame对象）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ol start="2"><li>重复值</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 甄别重复值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.duplicated(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subset,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于判断重复的列标签</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keep,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如何处理重复项（默认值&#39;first&#39;表示保留第一项）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除重复值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.drop_duplicates(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subset,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于判断重复的列标签</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keep,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如何处理重复项（默认值&#39;first&#39;表示保留第一项）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地去重（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 统计非重复值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.nunique(axis)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="3"><li>异常值</li></ol><p>异常值的处理重点在甄别，可以使用数值判定法、z-score 判定法、孤立森林等方法来进行甄别离群点，然后结合实际业务意义判定是不是异常值。对于异常值的处理，通常是替换或删除，删除可以用之前提到的<code>drop</code>方法删行或者删列。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 替换异常值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.replace(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    to_replace,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 被替换的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    value,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 替换的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地替换（要不要返回新的DataFrame对象）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    regex,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否启动正则表达式替换（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="4"><li>预处理</li></ol><p>预处理通常在<code>Series</code>对象上对数据进行操作，假设变量<code>s</code>是一个<code>Series</code>对象，具体的操作包括：</p><ul><li>日期时间预处理</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.year                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 年</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.quarter                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 季度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.month                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 月</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.day                    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.hour                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 时</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.minute                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.second                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 秒</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.weekday                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 星期几</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.to_period(freq)        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 以特定频率转换</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.floor(freq)            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下取整</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.ceil(freq)             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 上取整</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.round(freq)            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 舍入</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.strftime(date_format)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 格式化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.tz_localize(tz)        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 时区本地化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.dt.tz_convert(tz)         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转换时区</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>字符串预处理</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.lower()       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 字符串变小写</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.upper()       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 字符串变大写</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.title()       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 字符串首字母大写</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 字符串拆分</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.split(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pat,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拆分字符或正则表达式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n,              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最大拆分次数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    expand,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否将拆分后的内容展开成多个列（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从字符串中捕获内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.extract(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pat,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 正则表达式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    flags,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 正则表达式处理标记</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    expand,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否将捕获内容展开成多个列（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.isalpha()     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查字符串是不是字母</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.isnumeric()   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查字符串是不是数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.isalnum()     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查字符串是不是字母数字</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.isspace()     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查字符串是不是空白字符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.startswith()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查字符串是否以指定内容开头 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.endswith()    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查字符串是否以指定内容结尾</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查字符串是否跟正则表达式匹配</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.match(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pat,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 正则表达式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    flags,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 正则表达式处理标记</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查字符串是否包含指定内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.contains(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pat,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 字符串或正则表达式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    flags,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 正则表达式处理标记</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    regex,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否使用正则表达式（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 替换</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.replace(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pat,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 被替换的内容（字符串或正则表达式）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    repl,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 替换的内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n,              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最大替换次数（默认值-1表示全部替换）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    flags,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 正则表达式处理标记</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    regex,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否使用正则表达式（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.strip()       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 去掉字符串多余的空格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.join(sep)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用指定的分隔符将内容拼接成字符串</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 字符串拼接</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.cat(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    others,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拼接的内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sep,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分隔符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    na_rep,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 空值的替代符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.len()         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获得字符串长度</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查找子串的位置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.str.find(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sub,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 子串</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    start,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 起始位置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    end,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 结束位置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><ul><li>类别预处理</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 类别重排序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.cat.reorder_categories(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    new_categories,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 新的类别顺序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地处理（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加类别</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.cat.add_categories(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    new_categories,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要添加的新类别</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地处理（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 移除类别</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.cat.remove_categories(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    removals,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要移除的类别</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地处理（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 移除没有使用的类别</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.cat.remove_unused_categories(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地处理（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 类别重命名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.cat.rename_categories(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    new_categories,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 新的类别名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地处理（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ul><li>二值化（虚拟变量）</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.get_dummies(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    data,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 需要转换为虚拟变量的Series或DataFrame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    prefix,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定生成的虚拟变量列的前缀</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    prefix_sep,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 前缀和列名之间的分隔符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dummy_na,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否为空值（NaN）生成一个列（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定要转换的列名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    drop_first,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否从生成的虚拟变量中删除第一个类别的列（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>离散化（分箱）</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.cut(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要分割的输入数据（一维数据）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bins,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分割的区间数或具体的区间边界</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    right,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 区间是否包含右端点（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    labels,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定每个区间的标签</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    retbins,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否返回分割的边界数组（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ordered,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 返回的类别是否是有序的（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.qcut(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要分割的输入数据（一维数据）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    q,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分割点的数量或具体的分位数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    labels,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定每个区间的标签</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    retbins,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否返回分割的边界数组（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>自定义转换</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.map(arg)          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对数据进行元素级别的转换和映射</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.map(func)        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对数据进行元素级别的转换和映射</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过指定函数对数据进行元素级别的转换</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.apply(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    func,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 作用于每个元素的函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    convert_type,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 尝试将结果转换为最适合的类型（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 传递给func的额外位置参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 传递给func的额外关键字参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过指定函数对数据进行行级或列级的转换</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.apply(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    func,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 作用域行或列的函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    axis,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 控制做行级还是列级转换</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result_type,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定返回的类型（&#39;expand&#39;表示扩展为列，&#39;reduce&#39;表示返回标量，&#39;broadcast&#39;表示广播为原始形状）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 传递给func的额外位置参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 传递给func的额外关键字参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.transform(func)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过指定一个或多个函数对数据进行元素级别的转换</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.transform(func)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过指定一个或多个函数对数据进行行级或列级转换</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="数据透视" tabindex="-1">数据透视 <a class="header-anchor" href="#数据透视" aria-label="Permalink to &quot;数据透视&quot;">​</a></h4><ol><li>描述性统计信息</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.mean()     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 均值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.median()   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 中位数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.mode()     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 众数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.max()      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最大值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.min()      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最小值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.var(ddof)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方差（ddof代表自由度校正值）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.std(ddof)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 标准差（ddof代表自由度校正值）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.skew()     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 偏态系数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.kurt()     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 峰度系数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2"><li>相关性分析</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.cov()         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 协方差</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.corr(method)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 相关系数（默认&#39;pearson&#39;表示皮尔逊相关系数，可选值还有&#39;kendall&#39;和&#39;spearman&#39;）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="3"><li>排序和头部值</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 排序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.sort_values(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    asending,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 升序或降序（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地排序（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kind,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 排序算法（默认值&#39;quicksort&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    na_position,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 空值的位置（默认值&#39;last&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    key,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定比较元素的规则（函数）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 排序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.sort_values(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    by,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 排序的依据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ascending,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 升序或降序（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inplace,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否就地排序（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kind,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 排序算法（默认值&#39;quicksort&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    na_position,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 空值的位置（默认值&#39;last&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    key,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定比较元素的规则（函数）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TopN元素（头部）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.nlargest(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 前N个最大值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keep,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如何处理重复值（默认值&#39;first&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TopN元素（头部）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.nlargest(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 前N个最大值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定用于排序的列名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keep,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如何处理重复值（默认值&#39;first&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TopN元素（尾部）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s.nsmallest(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 前N个最小值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keep,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如何处理重复值（默认值&#39;first&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TopN元素（尾部）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.nsmallest(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 前N个最小值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定用于排序的列名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keep,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如何处理重复值（默认值&#39;first&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><ol start="4"><li>分组聚合</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.groupby(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    by,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定用于分组的列名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    level,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对于多级索引指定用哪一级分组</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    as_index,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否将分组的列设置为索引（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sort,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否对分组的结果进行排序（默认值True）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    observed,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 只考虑在数据中实际出现的分组（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).aggregate(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    func,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 单个函数或函数列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 函数的可变参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 函数的关键字参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.pivot(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    index,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定用作索引的列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要作为新列的列 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    values,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于填充新DataFrame中的值的列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.melt(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id_vars,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在转换过程中保持不变的列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    value_vars,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要转换为行的列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    var_name,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定存储原列名的新列名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    value_name,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定存储原数据值的新列名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ol start="5"><li>透视表</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.pivot_table(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    data,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DataFrame对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    values,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 需要聚合的列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    index,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分组数据的字段（行索引）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分组数据的字段（列索引）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aggfunc,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 聚合函数（默认值&#39;mean&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fill_value,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 填充空值的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    margins,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否计算行列总计（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    margins_name,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 总计列的名字（默认值&#39;All&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    observed       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 只考虑在数据中实际出现的分组（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="6"><li>交叉表</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pd.crosstab(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    index,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 交叉表中的行变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 交叉表中的列变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    values,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于填充交叉表的值（可选项）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aggfunc,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 聚合函数（可选项）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    margins,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否计算行列总计（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    margins_name,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 总计列的名字（默认值&#39;All&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="数据呈现" tabindex="-1">数据呈现 <a class="header-anchor" href="#数据呈现" aria-label="Permalink to &quot;数据呈现&quot;">​</a></h4><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.plot(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    figsize,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 图表尺寸（二元组）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kind,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 图表类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ax,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 绘图的坐标系</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 横轴数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 纵轴数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 图表标题</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    grid,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否绘制网格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    legend,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否显示图例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    xticks,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 横轴刻度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    yticks,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 纵轴刻度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    xlim,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 横轴取值范围</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ylim,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 纵轴取值范围</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    xlabel,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 横轴标签</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ylabel,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 纵轴标签</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rot,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 轴标签旋转角度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fontsize,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 轴标签字体大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    colormap,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 颜色系列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    stacked,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否绘制堆叠图（默认值False）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    colorbar,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否显示色彩条</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><code>plot</code>方法最重要的参数是<code>kind</code>，它可以控制图表的类型，具体如下所示：</p><ol><li>折线图：<code>kind=&#39;line&#39;</code></li><li>散点图：<code>kind=&#39;scatter&#39;</code></li><li>柱状图：<code>kind=&#39;bar&#39;</code></li><li>条状图（水平柱状图）：<code>kind=&#39;barh&#39;</code></li><li>饼状图：<code>kind=&#39;pie&#39;</code></li><li>直方图：<code>kind=&#39;hist&#39;</code></li><li>箱线图：<code>kind=&#39;box&#39;</code></li><li>面积图：<code>kind=&#39;area&#39;</code></li><li>核密度估计图：<code>kind=&#39;kde&#39;</code></li></ol><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>大家可以找一个数据集按照上面讲解的流程把这些最常用的类型、函数和方法过一遍，是不是印象就深刻一点了。更详细的内容还是推荐阅读我的专栏<a href="https://www.zhihu.com/column/c_1217746527315496960" target="_blank" rel="noreferrer">《基于Python的数据分析》</a>或者观看B站上的视频<a href="https://www.bilibili.com/video/BV13t4y1a7TV/" target="_blank" rel="noreferrer">《Python数据分析三剑客》</a>。</p>`,91)]))}const y=a(h,[["render",t]]);export{g as __pageData,y as default};
